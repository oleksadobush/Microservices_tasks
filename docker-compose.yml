version: "3"

networks:
  microservices:
    driver: bridge

services:
  consul:
    build:
      context: ./Consul
      dockerfile: dockerfile
    networks:
      - microservices
    ports:
      - "8500:8500"
    volumes:
      - ./Consul/server1.json:/consul/config/server1.json:ro
    command: "agent -bootstrap-expect=1"

  facade-service1:
    build:
      context: ./facade-service
      dockerfile: dockerfile
    networks:
      - microservices
    environment:
      - S_ID=1
    ports:
      - "8080:8080"

  facade-service2:
    build:
      context: ./facade-service
      dockerfile: dockerfile
    networks:
      - microservices
    environment:
      - S_ID=1
    ports:
      - "8082:8080"

  logging-service1:
    build:
      context: ./logging-service
      dockerfile: dockerfile
    networks:
      - microservices
    environment:
      - S_ID=1

  logging-service2:
    build:
      context: ./logging-service
      dockerfile: dockerfile
    networks:
      - microservices
    environment:
      - S_ID=2

  logging-service3:
    build:
      context: ./logging-service
      dockerfile: dockerfile
    networks:
      - microservices
    environment:
      - S_ID=3

  messages-service1:
    build:
      context: ./messages-service
      dockerfile: dockerfile
    networks:
      - microservices
    environment:
      - S_ID=1

  messages-service2:
    build:
      context: ./messages-service
      dockerfile: dockerfile
    networks:
      - microservices
    environment:
      - S_ID=2


  hazel1:
    image: hazelcast/hazelcast
    networks:
      - microservices

  hazel2:
    image: hazelcast/hazelcast
    networks:
      - microservices

  hazel3:
    image: hazelcast/hazelcast
    networks:
      - microservices

  hazel-mc:
    image: hazelcast/management-center
    networks:
      - microservices
    ports:
      - "8081:8080"